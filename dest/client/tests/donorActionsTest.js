define(['chai', '../actions/donorActions', '../actions/actionTypes'], function (_chai, _donorActions, _actionTypes) {
    'use strict';

    var actions = _interopRequireWildcard(_donorActions);

    var actionTypes = _interopRequireWildcard(_actionTypes);

    function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
            return obj;
        } else {
            var newObj = {};

            if (obj != null) {
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                }
            }

            newObj.default = obj;
            return newObj;
        }
    }

    var donors = [{
        _id: "58459056df2c1a0458ed50ee",
        address: "Hello Mobiles - Madhapur Main Road, Hyderabad",
        bloodGroup: "AB+",
        createdAt: "2016-12-05T16:05:42.464Z",
        emailAddress: "abc@mail.com",
        firstName: "changees",
        ipAddress: "::1",
        lastName: "khan",
        latitude: 17.458969530000434,
        longitude: 78.36655585700049,
        mobileNumber: "+009911991199"
    }, {
        _id: "58459056df2c1a0458ed50ee",
        address: "Hello Mobiles - Madhapur Main Road, Hyderabad",
        bloodGroup: "AB+",
        createdAt: "2016-12-05T16:05:42.464Z",
        emailAddress: "abc@mail.com",
        firstName: "changees",
        ipAddress: "::1",
        lastName: "khan",
        latitude: 17.458969530000434,
        longitude: 78.36655585700049,
        mobileNumber: "+009911991199"
    }];

    describe('## Donor Actions ', function () {

        it('# Validate getDonorsSuccess', function () {
            var action = {
                type: actionTypes.GET_DONORS_SUCCESS,
                donors: donors
            };
            (0, _chai.expect)(actions.getDonorsSuccess(donors)).to.deep.equal(action);
        });

        it('# Validate getDonorDetailsSuccess', function () {
            var action = {
                type: actionTypes.GET_DONOR_DETAILS_SUCCESS,
                donor: donors[0]
            };
            (0, _chai.expect)(actions.getDonorDetailsSuccess(donors[0])).to.deep.equal(action);
        });

        it('# Validate addDonorSuccess', function () {
            var action = {
                type: actionTypes.ADD_DONOR_SUCCESS,
                donor: donors[0]
            };
            (0, _chai.expect)(actions.addDonorSuccess(donors[0])).to.deep.equal(action);
        });

        it('# Validate updateDonorSuccess', function () {
            var action = {
                type: actionTypes.UPDATE_DONOR_SUCCESS,
                donor: donors[0]
            };
            (0, _chai.expect)(actions.updateDonorSuccess(donors[0])).to.deep.equal(action);
        });

        it('# Validate deleteDonorSuccess', function () {
            var action = {
                type: actionTypes.DELETE_DONOR_SUCCESS,
                donor: donors[0]['_id']
            };
            (0, _chai.expect)(actions.deleteDonorSuccess(donors[0]['_id'])).to.deep.equal(action);
        });
        it('# Validate addDonorToList', function () {
            var action = {
                type: actionTypes.ADD_DONOR_TO_LIST,
                donor: donors[0]
            };
            (0, _chai.expect)(actions.addDonorToList(donors[0])).to.deep.equal(action);
        });
        it('# Validate updateDonorInList', function () {
            var action = {
                type: actionTypes.UPDATE_DONOR_IN_LIST,
                donor: donors[0]
            };
            (0, _chai.expect)(actions.updateDonorInList(donors[0])).to.deep.equal(action);
        });

        it('# Validate deleteDonorFromList', function () {
            var action = {
                type: actionTypes.DELETE_DONOR_FROM_LIST,
                donorId: donors[0]['_id']
            };
            (0, _chai.expect)(actions.deleteDonorFromList(donors[0]['_id'])).to.deep.equal(action);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,